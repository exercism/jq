#!/usr/bin/env bash

set -euo pipefail

if (( $# != 1 )); then
    echo >&2 "Populates a new directory for a practice exercise."
    echo >&2 "Usage: $0 <exercise-slug>"
    exit 1
fi

die() { echo >&2 "$*"; exit 1; }

required_tool() {
    command -v "$1" >/dev/null 2>&1 ||
        die "$1 is required but not installed. Please install it and make sure it's in your PATH."
}
required_tool jq
required_tool curl

[[ -f ./bin/fetch-configlet ]] || die "run this script from the repo's root directory."

slug="${1}"

# transform slug 'resistor-color-duo' to name 'Resistor Color Duo'
IFS=- read -ra words <<< "${slug}"
name=${words[*]^}

it_exists=$(
    jq --arg slug "${slug}" '
        .exercises.practice
        | map(select(.slug == $slug))
        | length > 0
    ' config.json
)
[[ ${it_exists} == false ]] || die "${slug} already exists in config.json"

# Add entry for exercise in config.json
./bin/fetch-configlet
jq  --arg slug "${slug}"                 \
    --arg uuid "$(./bin/configlet uuid)" \
    --arg name "${name}"                 \
    '
        .exercises.practice += [
            {
                slug: $slug,
                name: $name,
                uuid: $uuid,
                practices: [],
                prerequisites: [],
                difficulty: 1
            }
        ]
    ' config.json > config.json.tmp \
&& mv config.json.tmp config.json

# Sync the exercise
./bin/configlet sync --update --yes  \
                     --tests include \
                     --metadata      \
                     --docs          \
                     --exercise "${slug}"

touch "exercises/practice/${slug}/.meta/example.jq"

echo '"Remove this line and implement your solution" | halt_error' > "exercises/practice/${slug}/${slug}.jq"

echo 
read -rp 'Your github username: ' author
conf="exercises/practice/${slug}/.meta/config.json"
jq  --arg slug "${slug}"     \
    --arg author "${author}" \
    '
        .authors = [$author] |
        .files = {
            solution: [$slug + ".jq"],
            test: ["test-\($slug).bats"],
            example: [".meta/example.jq"]
        }
    ' "${conf}" > "${conf}.tmp" \
&& mv "${conf}.tmp" "${conf}"

cp exercises/practice/hello-world/bats-extra.bash exercises/practice/"${slug}"

./bin/generate_tests "${slug}"

echo
find "exercises/practice/${slug}" -type f -ls

cat << NEXT_STEPS

Your next steps are:
- Review the test suite in 'exercises/practice/${slug}/test-${slug}.jq'
  - Any test cases you don't implement, mark them in 'exercises/practice/${slug}/.meta/tests.toml' with "include = false"
- Create the example solution in 'exercises/practice/${slug}/.meta/example.jq'
- Verify the example solution by running 'bin/validate_one_exercise exercises/practice/${slug}'
- Review the stub solution in 'exercises/practice/${slug}/${slug}.jq'
- Update the 'difficulty' value for the exercise's entry in the 'config.json' file
- Validate CI using 'bin/configlet lint'
NEXT_STEPS
